--TABLAS
drop table if exists usuarios;
create table usuarios (
    id_usuarios             number generated by default on null as identity,
    email                   varchar2(30),
    telefono                varchar2(9),
    nombre_apellidos        varchar2(50),
    contrasena              varchar2(16),
    direccion               varchar2(50),
    constraint pk_usuarios primary key(id_usuarios)
);

drop table if exists clientes;
create table clientes (
    id_clientes                 number generated by default on null as identity,
    email_cliente               varchar2(30),
    telefono_cliente            varchar2(9),
    nombre_apellidos_cliente    varchar2(50),
    contrasena_cliente          varchar2(16),
    direccion_cliente           varchar2(50),
    constraint pk_clientes primary key(id_clientes)
);

drop table if exists alojamientos;
create table alojamientos (
    id_alojamiento      number generated by default on null as identity,
    id_hotel_aps        number,
    nombre              varchar2(20),
    direccion           varchar2(50),
    clasificacion       number(1),
    constraint pk_alojamientos primary key(id_alojamiento),
    constraint fk_alojamientos_hotel_aps foreign key(id_hotel_aps) references hoteles_aps(id)
);

create table hoteles_aps (
    id                  number,
    nombre              varchar2(20),
    direccion           varchar2(50),
    tipo_alojamiento    varchar2(20),
    clasificacion       number(1),
    constraint pk_hoteles_aps primary key(id),
    constraint ck_clasificacion check (clasificacion between 1 and 5),
    constraint ck_tipo check (UPPER(tipo_alojamiento) = 'HOTEL' or UPPER(tipo_alojamiento) = 'APS_TURISTICO')
);


drop table if exists reserva;
create table reserva (
    id_reserva          number generated by default on null as identity,
    fecha_ini           date,
    fecha_fin           date,
    id_cliente          number,
    id_alojamiento      number,
    constraint pk_reserva primary key(id_reserva),
    constraint fk1 foreign key(id_cliente) references clientes(id_clientes),
    constraint fk3 foreign key(id_alojamiento) references alojamientos(id_alojamiento)
);



--TRIGGERS
CREATE OR REPLACE TRIGGER crear_alojamientos
AFTER INSERT ON hoteles_aps
FOR EACH ROW
BEGIN
    IF :NEW.tipo_alojamiento = 'HOTEL' THEN
        FOR i IN 1..10 LOOP
            INSERT INTO alojamientos (id_hotel_aps, nombre, direccion, clasificacion)
            VALUES (:NEW.id, :NEW.nombre, :NEW.direccion, :NEW.clasificacion);
        END LOOP;
    ELSIF :NEW.tipo_alojamiento = 'APS_TURISTICO' THEN
        INSERT INTO alojamientos (id_hotel_aps, nombre, direccion, clasificacion)
        VALUES (:NEW.id, :NEW.nombre, :NEW.direccion, :NEW.clasificacion);
    END IF;
END;

--actualizar hoteles y aps_turisticos automaticamente
CREATE OR REPLACE TRIGGER actualizar_alojamientos
AFTER UPDATE ON hoteles_aps
FOR EACH ROW
BEGIN
    UPDATE alojamientos
    SET 
        clasificacion = :NEW.clasificacion
    WHERE id_hotel_aps = :OLD.id;
END;

/*
/*INSERCION DATOS
-- Registros para la tabla usuarios
INSERT INTO usuarios (email, telefono, nombre_apellidos, contrasena, direccion)
VALUES ('johndoe@example.com', '123456789', 'John Doe', 'contrasena1', '123 Main St');

INSERT INTO usuarios (email, telefono, nombre_apellidos, contrasena, direccion)
VALUES ('janedoe@example.com', '987654321', 'Jane Doe', 'contrasena2', '456 Elm St');

INSERT INTO usuarios (email, telefono, nombre_apellidos, contrasena, direccion)
VALUES ('alice_smith@example.com', '111222333', 'Alice Smith', 'contrasena3', '789 Oak St');

INSERT INTO usuarios (email, telefono, nombre_apellidos, contrasena, direccion)
VALUES ('bob_johnson@example.com', '444555666', 'Bob Johnson', 'contrasena4', '101 Pine St');

INSERT INTO usuarios (email, telefono, nombre_apellidos, contrasena, direccion)
VALUES ('emily_brown@example.com', '777888999', 'Emily Brown', 'contrasena5', '202 Cedar St');

INSERT INTO usuarios (email, telefono, nombre_apellidos, contrasena, direccion)
VALUES ('michael_wilson@example.com', '121212121', 'Michael Wilson', 'contrasena6', '303 Maple St');

INSERT INTO usuarios (email, telefono, nombre_apellidos, contrasena, direccion)
VALUES ('sarah_miller@example.com', '989898989', 'Sarah Miller', 'contrasena7', '404 Walnut St');

INSERT INTO usuarios (email, telefono, nombre_apellidos, contrasena, direccion)
VALUES ('david_taylor@example.com', '656565656', 'David Taylor', 'contrasena8', '505 Birch St');

INSERT INTO usuarios (email, telefono, nombre_apellidos, contrasena, direccion)
VALUES ('laura_anderson@example.com', '454545454', 'Laura Anderson', 'contrasena9', '606 Pineapple St');

INSERT INTO usuarios (email, telefono, nombre_apellidos, contrasena, direccion)
VALUES ('james_thomas@example.com', '787878787', 'James Thomas', 'contrasena10', '707 Orange St');

-- Registros para la tabla clientes
INSERT INTO clientes (email_cliente, telefono_cliente, nombre_apellidos_cliente, contrasena_cliente, direccion_cliente)
VALUES ('client1@example.com', '123456789', 'Client 1', 'contrasena1', '123 Main St');

INSERT INTO clientes (email_cliente, telefono_cliente, nombre_apellidos_cliente, contrasena_cliente, direccion_cliente)
VALUES ('client2@example.com', '987654321', 'Client 2', 'contrasena2', '456 Elm St');

INSERT INTO clientes (email_cliente, telefono_cliente, nombre_apellidos_cliente, contrasena_cliente, direccion_cliente)
VALUES ('client3@example.com', '111222333', 'Client 3', 'contrasena3', '789 Oak St');

INSERT INTO clientes (email_cliente, telefono_cliente, nombre_apellidos_cliente, contrasena_cliente, direccion_cliente)
VALUES ('client4@example.com', '444555666', 'Client 4', 'contrasena4', '101 Pine St');

INSERT INTO clientes (email_cliente, telefono_cliente, nombre_apellidos_cliente, contrasena_cliente, direccion_cliente)
VALUES ('client5@example.com', '777888999', 'Client 5', 'contrasena5', '202 Cedar St');

INSERT INTO clientes (email_cliente, telefono_cliente, nombre_apellidos_cliente, contrasena_cliente, direccion_cliente)
VALUES ('client6@example.com', '121212121', 'Client 6', 'contrasena6', '303 Maple St');

INSERT INTO clientes (email_cliente, telefono_cliente, nombre_apellidos_cliente, contrasena_cliente, direccion_cliente)
VALUES ('client7@example.com', '989898989', 'Client 7', 'contrasena7', '404 Walnut St');

INSERT INTO clientes (email_cliente, telefono_cliente, nombre_apellidos_cliente, contrasena_cliente, direccion_cliente)
VALUES ('client8@example.com', '656565656', 'Client 8', 'contrasena8', '505 Birch St');

INSERT INTO clientes (email_cliente, telefono_cliente, nombre_apellidos_cliente, contrasena_cliente, direccion_cliente)
VALUES ('client9@example.com', '454545454', 'Client 9', 'contrasena9', '606 Pineapple St');

INSERT INTO clientes (email_cliente, telefono_cliente, nombre_apellidos_cliente, contrasena_cliente, direccion_cliente)
VALUES ('client10@example.com', '787878787', 'Client 10', 'contrasena10', '707 Orange St');

-- Registros para la tabla reserva
INSERT INTO reserva (fecha_ini, fecha_fin, id_cliente, id_alojamiento)
VALUES (TO_DATE('2024-05-01', 'YYYY-MM-DD'), TO_DATE('2024-05-08', 'YYYY-MM-DD'), 1, 1);

INSERT INTO reserva (fecha_ini, fecha_fin, id_cliente, id_alojamiento)
VALUES (TO_DATE('2024-05-02', 'YYYY-MM-DD'), TO_DATE('2024-05-09', 'YYYY-MM-DD'), 2, 2);

INSERT INTO reserva (fecha_ini, fecha_fin, id_cliente, id_alojamiento)
VALUES (TO_DATE('2024-05-03', 'YYYY-MM-DD'), TO_DATE('2024-05-10', 'YYYY-MM-DD'), 3, 3);

INSERT INTO reserva (fecha_ini, fecha_fin, id_cliente, id_alojamiento)
VALUES (TO_DATE('2024-05-04', 'YYYY-MM-DD'), TO_DATE('2024-05-11', 'YYYY-MM-DD'), 4, 4);

INSERT INTO reserva (fecha_ini, fecha_fin, id_cliente, id_alojamiento)
VALUES (TO_DATE('2024-05-05', 'YYYY-MM-DD'), TO_DATE('2024-05-12', 'YYYY-MM-DD'), 5, 5);

INSERT INTO reserva (fecha_ini, fecha_fin, id_cliente, id_alojamiento)
VALUES (TO_DATE('2024-05-06', 'YYYY-MM-DD'), TO_DATE('2024-05-13', 'YYYY-MM-DD'), 6, 6);

INSERT INTO reserva (fecha_ini, fecha_fin, id_cliente, id_alojamiento)
VALUES (TO_DATE('2024-05-07', 'YYYY-MM-DD'), TO_DATE('2024-05-14', 'YYYY-MM-DD'), 7, 7);

INSERT INTO reserva (fecha_ini, fecha_fin, id_cliente, id_alojamiento)
VALUES (TO_DATE('2024-05-08', 'YYYY-MM-DD'), TO_DATE('2024-05-15', 'YYYY-MM-DD'), 8, 8);

INSERT INTO reserva (fecha_ini, fecha_fin, id_cliente, id_alojamiento)
VALUES (TO_DATE('2024-05-09', 'YYYY-MM-DD'), TO_DATE('2024-05-16', 'YYYY-MM-DD'), 9, 9);

INSERT INTO reserva (fecha_ini, fecha_fin,id_cliente, id_alojamiento)
VALUES (TO_DATE('2024-05-10', 'YYYY-MM-DD'), TO_DATE('2024-05-17', 'YYYY-MM-DD'), 10, 10);
-- Insertar registros en la tabla hoteles_aps
INSERT INTO hoteles_aps (id, nombre, direccion, tipo_alojamiento, clasificacion)
VALUES (1, 'Hotel Paradise', '123 Ocean Avenue', 'Hotel', 5);

INSERT INTO hoteles_aps (id, nombre, direccion, tipo_alojamiento, clasificacion)
VALUES (2, 'Sunset Resort', '456 Palm Street', 'Hotel', 4);

INSERT INTO hoteles_aps (id, nombre, direccion, tipo_alojamiento, clasificacion)
VALUES (3, 'Mountain View Lodge', '789 Mountain Road', 'Hotel', 4);

INSERT INTO hoteles_aps (id, nombre, direccion, tipo_alojamiento, clasificacion)
VALUES (4, 'Beachfront Villas', '101 Beach Boulevard', 'APS_Turistico', 4);

INSERT INTO hoteles_aps (id, nombre, direccion, tipo_alojamiento, clasificacion)
VALUES (5, 'City Lights Apartments', '202 Downtown Avenue', 'APS_Turistico', 3);

INSERT INTO hoteles_aps (id, nombre, direccion, tipo_alojamiento, clasificacion)
VALUES (6, 'Lakeview Retreat', '303 Lakeside Drive', 'Hotel', 5);

INSERT INTO hoteles_aps (id, nombre, direccion, tipo_alojamiento, clasificacion)
VALUES (7, 'Forest Cabin Inn', '404 Forest Lane', 'APS_Turistico', 4);

INSERT INTO hoteles_aps (id, nombre, direccion, tipo_alojamiento, clasificacion)
VALUES (8, 'Luxury Suites Downtown', '505 Luxury Street', 'Hotel', 5);

INSERT INTO hoteles_aps (id, nombre, direccion, tipo_alojamiento, clasificacion)
VALUES (9, 'Riverside Resort', '606 River Road', 'Hotel', 4);

INSERT INTO hoteles_aps (id, nombre, direccion, tipo_alojamiento, clasificacion)
VALUES (10, 'Skyline Tower Hotel', '707 Skyline Avenue', 'Hotel', 5);
*/
